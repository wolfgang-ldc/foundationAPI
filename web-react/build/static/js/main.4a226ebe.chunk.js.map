{"version":3,"sources":["components/Title.js","components/UserList.js","components/RatingsChart.js","components/UserCount.js","components/RecentReviews.js","components/Dashboard.js","App.js","registerServiceWorker.js","index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","GET_USER","gql","withStyles","theme","root","maxWidth","marginTop","spacing","overflowX","margin","table","minWidth","textField","marginLeft","marginRight","classes","React","useState","order","setOrder","orderBy","setOrderBy","page","rowsPerPage","usernameFilter","filterState","setFilterState","useQuery","variables","first","offset","filter","length","name_CONTAINS","loading","data","error","Paper","className","TextField","id","label","value","onChange","filterName","event","val","target","oldFilterState","type","InputProps","input","Table","TableHead","TableRow","TableCell","sortDirection","toLowerCase","Tooltip","title","placement","enterDelay","TableSortLabel","active","direction","onClick","property","newOrderBy","newOrder","handleSortRequest","TableBody","users","map","n","scope","name","avgStars","toFixed","numReviews","GET_DATA_QUERY","RatingsChart","useTheme","Fragment","ratingsCount","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","main","useStyles","makeStyles","depositContext","flex","navLink","textDecoration","GET_COUNT_QUERY","Deposits","userCount","to","GET_RECENT_REVIEWS_QUERY","RecentReviews","size","align","reviews","row","moment","date","format","business","user","stars","Dashboard","display","paper","padding","overflow","flexDirection","fixedHeight","height","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Copyright","href","Date","getFullYear","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","breakpoints","up","appBarSpacer","content","paddingTop","paddingBottom","appBarImage","maxHeight","App","open","setOpen","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","Menu","src","alt","noWrap","Drawer","ChevronLeft","Divider","List","ListItem","button","ListItemIcon","ListItemText","People","Container","exact","path","UserList","Box","pt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","client","ApolloClient","uri","process","cache","InMemoryCache","Main","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4a226ebe.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n}\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Paper,\n  TableSortLabel,\n  TextField,\n} from '@material-ui/core'\n\nimport Title from './Title'\n\nconst styles = (theme) => ({\n  root: {\n    maxWidth: 700,\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    margin: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 300,\n  },\n})\n\nconst GET_USER = gql`\n  query usersPaginateQuery(\n    $first: Int\n    $offset: Int\n    $orderBy: [UserSort]\n    $filter: UserWhere\n  ) {\n    users(\n      options: { limit: $first, skip: $offset, sort: $orderBy }\n      where: $filter\n    ) {\n      id: userId\n      name\n      avgStars\n      numReviews\n    }\n  }\n`\n\nfunction UserList(props) {\n  const { classes } = props\n  const [order, setOrder] = React.useState('ASC')\n  const [orderBy, setOrderBy] = React.useState('name')\n  const [page] = React.useState(0)\n  const [rowsPerPage] = React.useState(10)\n  const [filterState, setFilterState] = React.useState({ usernameFilter: '' })\n\n  const getFilter = () => {\n    return filterState.usernameFilter.length > 0\n      ? { name_CONTAINS: filterState.usernameFilter }\n      : {}\n  }\n\n  const { loading, data, error } = useQuery(GET_USER, {\n    variables: {\n      first: rowsPerPage,\n      offset: rowsPerPage * page,\n      orderBy: { [orderBy]: order },\n      filter: getFilter(),\n    },\n  })\n\n  const handleSortRequest = (property) => {\n    const newOrderBy = property\n    let newOrder = 'DESC'\n\n    if (orderBy === property && order === 'DESC') {\n      newOrder = 'ASC'\n    }\n\n    setOrder(newOrder)\n    setOrderBy(newOrderBy)\n  }\n\n  const handleFilterChange = (filterName) => (event) => {\n    const val = event.target.value\n\n    setFilterState((oldFilterState) => ({\n      ...oldFilterState,\n      [filterName]: val,\n    }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Title>User List</Title>\n      <TextField\n        id=\"search\"\n        label=\"User Name Contains\"\n        className={classes.textField}\n        value={filterState.usernameFilter}\n        onChange={handleFilterChange('usernameFilter')}\n        margin=\"normal\"\n        variant=\"outlined\"\n        type=\"text\"\n        InputProps={{\n          className: classes.input,\n        }}\n      />\n      {loading && !error && <p>Loading...</p>}\n      {error && !loading && <p>Error</p>}\n      {data && !loading && !error && (\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell\n                key=\"name\"\n                sortDirection={orderBy === 'name' ? order.toLowerCase() : false}\n              >\n                <Tooltip title=\"Sort\" placement=\"bottom-start\" enterDelay={300}>\n                  <TableSortLabel\n                    active={orderBy === 'name'}\n                    direction={order.toLowerCase()}\n                    onClick={() => handleSortRequest('name')}\n                  >\n                    Name\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell key=\"avgStars\">Average Stars</TableCell>\n              <TableCell key=\"numReviews\">Number of Reviews</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.users.map((n) => {\n              return (\n                <TableRow key={n.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {n.name}\n                  </TableCell>\n                  <TableCell>\n                    {n.avgStars ? n.avgStars.toFixed(2) : '-'}\n                  </TableCell>\n                  <TableCell>{n.numReviews}</TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      )}\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(UserList)\n","import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  Bar,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n  BarChart,\n} from 'recharts'\nimport { useQuery, gql } from '@apollo/client'\nimport Title from './Title'\n\nconst GET_DATA_QUERY = gql`\n  {\n    ratingsCount {\n      stars\n      count\n    }\n  }\n`\n\nexport default function RatingsChart() {\n  const theme = useTheme()\n\n  const { loading, error, data } = useQuery(GET_DATA_QUERY)\n  if (error) return <p>Error</p>\n  if (loading) return <p>Loading</p>\n\n  return (\n    <React.Fragment>\n      <Title>Ratings Distribution</Title>\n      <ResponsiveContainer>\n        <BarChart\n          data={data.ratingsCount}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"stars\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Count\n            </Label>\n          </YAxis>\n          <Bar dataKey=\"count\" fill={theme.palette.primary.main}></Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Title from './Title'\nimport { useQuery, gql } from '@apollo/client'\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n  navLink: {\n    textDecoration: 'none',\n  },\n})\n\nconst GET_COUNT_QUERY = gql`\n  {\n    userCount\n  }\n`\n\nexport default function Deposits() {\n  const classes = useStyles()\n\n  const { loading, error, data } = useQuery(GET_COUNT_QUERY)\n  if (error) return <p>Error</p>\n  return (\n    <React.Fragment>\n      <Title>Total Users</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {loading ? 'Loading...' : data.userCount}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        users found\n      </Typography>\n      <div>\n        <Link to=\"/users\" className={classes.navLink}>\n          View users\n        </Link>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { useQuery, gql } from '@apollo/client'\nimport Title from './Title'\nimport moment from 'moment'\n\nconst GET_RECENT_REVIEWS_QUERY = gql`\n  {\n    reviews(options: { limit: 10, sort: { date: DESC } }) {\n      user {\n        name\n      }\n      business {\n        name\n      }\n      date\n      text\n      stars\n    }\n  }\n`\n\nexport default function RecentReviews() {\n  const { loading, error, data } = useQuery(GET_RECENT_REVIEWS_QUERY)\n  if (error) return <p>Error</p>\n  if (loading) return <p>Loading</p>\n\n  return (\n    <React.Fragment>\n      <Title>Recent Reviews</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Business Name</TableCell>\n            <TableCell>User Name</TableCell>\n            <TableCell>Review Text</TableCell>\n            <TableCell align=\"right\">Review Stars</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.reviews.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{moment(row.date).format('MMMM Do YYYY')}</TableCell>\n              <TableCell>{row.business.name}</TableCell>\n              <TableCell>{row.user.name}</TableCell>\n              <TableCell>{row.text}</TableCell>\n              <TableCell align=\"right\">{row.stars}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Grid, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport RatingsChart from './RatingsChart'\nimport UserCount from './UserCount'\nimport RecentReviews from './RecentReviews'\nexport default function Dashboard() {\n  const theme = useTheme()\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 240,\n    },\n  }))\n  const classes = useStyles(theme)\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={4}>\n        {/* Ratings Chart */}\n        <Grid item xs={12} md={8} lg={7}>\n          <Paper className={fixedHeightPaper}>\n            <RatingsChart />\n          </Paper>\n        </Grid>\n        {/* User Count */}\n        <Grid item xs={12} md={4} lg={5}>\n          <Paper className={fixedHeightPaper}>\n            <UserCount />\n          </Paper>\n        </Grid>\n        {/* Recent Reviews */}\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <RecentReviews />\n          </Paper>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport UserList from './components/UserList'\n\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  CssBaseline,\n  Drawer,\n  Box,\n  AppBar,\n  Toolbar,\n  List,\n  Typography,\n  Divider,\n  IconButton,\n  Container,\n  Link as MUILink,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  People as PeopleIcon,\n} from '@material-ui/icons'\nimport Dashboard from './components/Dashboard'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <MUILink color=\"inherit\" href=\"https://grandstack.io/\">\n        Your GRANDstack App Name Here\n      </MUILink>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  navLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  appBarImage: {\n    maxHeight: '75px',\n    paddingRight: '20px',\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <img\n              className={classes.appBarImage}\n              src=\"img/grandstack.png\"\n              alt=\"GRANDstack logo\"\n            />\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Welcome To GRANDstack App\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <Link to=\"/\" className={classes.navLink}>\n              <ListItem button>\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItem>\n            </Link>\n\n            <Link to=\"/users\" className={classes.navLink}>\n              <ListItem button>\n                <ListItemIcon>\n                  <PeopleIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Users\" />\n              </ListItem>\n            </Link>\n          </List>\n          <Divider />\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route exact path=\"/businesses\" component={UserList} />\n              <Route exact path=\"/users\" component={UserList} />\n            </Switch>\n\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    </Router>\n  )\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client'\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHQL_URI || '/graphql',\n  cache: new InMemoryCache(),\n})\n\nconst Main = () => (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n)\n\nReactDOM.render(<Main />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}